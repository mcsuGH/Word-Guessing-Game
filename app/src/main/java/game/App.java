/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package game;

import java.util.Scanner;
import java.util.Random;

public class App {
    public static void main(String[] args) {
        multiPlayer();
    }

    public static void singlePlayer() {
        WordChoser choser = new WordChoser();
        Masker encryptor = new Masker();
        Game game = new Game(choser, encryptor);
        Scanner userInput = new Scanner(System.in);

        System.out.println("Welcome! Today the word to guess is:");
        do {
            System.out.println(game.getWordToGuess());
            System.out.printf("Enter one letter to guess (%d attempts remaining):", game.getRemainingAttempts());
            Character guessedLetter = userInput.nextLine().charAt(0);
            Boolean result = game.guessLetter(guessedLetter);
            if (result) {
                System.out.println("Right!");
            } else {
                System.out.println("Wrong...");
            }
        } while (!game.isGameLost() && !game.isGameWon());
        if (game.isGameWon()) {
            System.out.printf("You guessed it right! The word was %s.", game.getWordToGuess());
        }
        if (game.isGameLost()) {
            System.out.println("You have ran out of attempts!");
        }
    }

    public static void multiPlayer() {
        WordChoser choser = new WordChoser();
        Masker encryptor = new Masker();
        Game player1 = new Game(choser, encryptor);
        Game player2 = new Game(choser, encryptor);
        Game[] game = {player1, player2};
        Scanner userInput = new Scanner(System.in);
        Random rand = new Random();
        Integer turn = rand.nextInt(2);
        Integer playerTurn = turn % 2;

        System.out.println("Welcome! Today the word to guess is:");
        System.out.printf("Player 1: %s \n", player1.getWordToGuess());
        System.out.printf("Player 2: %s \n", player2.getWordToGuess());

        while (!isGameOver(game)) {
            System.out.printf("\nPlayer %d: Enter one letter to guess: (%d attempts remaining): \n", playerTurn + 1, game[playerTurn].getRemainingAttempts());
            Character guessedLetter = userInput.nextLine().charAt(0);
            Boolean result = game[playerTurn].guessLetter(guessedLetter);
            if (result) {
                System.out.println("Right!");
            } else {
                System.out.println("Wrong...");
            }
            System.out.printf("Player %d: %s \n", playerTurn + 1, game[playerTurn].getWordToGuess());
            turn += 1;
            playerTurn = turn % 2;
        }
    }

    public static Boolean isGameOver(Game[] games) {
        for (Game game : games) {
            if (game.isGameWon() || game.isGameLost()) {
                return true;
            }
        }
        return false;
    }
}

